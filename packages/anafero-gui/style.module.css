:global {
  body {
    margin: 0;
    padding: 0;
    padding-left: 68px;
    /* NOTE: Keep background below in sync with browser bar background color,
     * currently it is Spectrum’s pasteboard background color,
     * separately for light & dark.
     */
    @media (prefers-color-scheme: light) {
      & {
        color-scheme: light;
        background: rgb(213, 213, 213);
      }
    }
    @media (prefers-color-scheme: dark) {
      & {
        color-scheme: dark;
        background: rgb(0, 0, 0);
      }
    }
  }
  #app {
    padding: 10px 10px 10px 0;
  }
  #resources > * {
    /* Fix to make resource border radius work despite Spectrum. */
    background: transparent;
  }
  #resources {
    padding-bottom: 40vh;
  }
}

/** Added dynamically in Resource component as a child of body. */
.floatingSubresourceLink {
  .floatingSubresourceLinkAnchor {
    display: none; /* Hide temporarily */
    position: relative;
    left: -1em;
    width: 1em;
    /**
     * TODO: These variables have no effect outside of Spectrum’s provider.
     * TODO: Move subresource links into resource instead of body, fix positioning. */
    color: var(--spectrum-alias-focus-color);
    font-weight: 500;
    text-decoration: none;

    border-radius: 5px;
    padding: .25em;
    background: var(--spectrum-alias-highlight-selected-hover);
  }
}

.lastVisibleResourceMarkerIntersection {
  position: relative;
  top: -100px;
  z-index: 22;

  float: right;
  width: 12px;
}

.resourceLoadingOrMissingPlaceholder {
  color: var(--spectrum-alias-text-color);
  opacity: 0.6;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  display: flex;
  align-items: center;
  gap: 1em;

  transition: margin-left .5s ease-in-out;
  &.withNav {
    margin-left: 330px !important;
  }

  a {
    &:link, &:visited {
      text-decoration: none;
    }
    &:hover {
      text-decoration: underline;
    }
  }

  padding: 0 2em 2em;
  margin-right: 10px;
  margin-bottom: 10px;
}

.resource {

  /*
   * See: https://developer.mozilla.org/en-US/docs/Web/API/CSS_Custom_Highlight_API#highlighting_search_results
   */
  ::highlight(search-results) {
    background-color: #f06;
    color: white;
  }

  padding: 0;

  font-size: 16px;
  font-weight: 330;

  overflow-x: auto;

  /** Avoids scrollbar jank in Orion */
  margin-right: 10px;
  margin-bottom: 10px;

  /* position: relative; */

  border-radius: 5px;
  box-shadow: 0 var(--spectrum-alias-dropshadow-offset-y) var(--spectrum-alias-dropshadow-blur) var(--spectrum-alias-dropshadow-color);

  background-color: var(--spectrum-alias-background-color-default);
  color: var(--spectrum-alias-text-color);

  transition: margin-left .5s ease-in-out;
  &.withNav {
    margin-left: 330px !important;
  }
  &.active {
    outline-style: auto;
    outline-width: thin;
    outline-style: solid;
    outline-color: var(--spectrum-alias-focus-color);
  }

  a {
    &:link, &:visited {
      color: var(--spectrum-accent-color-1000);
    }
    &:hover {
      color: var(--spectrum-accent-color-1000);
    }
    &:active {
      color: var(--spectrum-alias-text-color-down);
    }
    &:focus-visible {
      color: var(--spectrum-alias-text-color-key-focus);
    }
    &.is-disabled {
      color: var(--spectrum-alias-text-color-disabled);
    }
  }

  /* TODO: Should probably be moved to Metanorma-specific adapter */
  .resourceBreadcrumbsNav {
    margin: 0;
    padding: 0.5em 2em 0 2em;
    list-style: none;
    /*background-color: var(--spectrum-alias-pasteboard-background-color);*/
    background-image: linear-gradient(
      178deg,
      transparent,
      var(--spectrum-alias-highlight-hover) 2rem);
    color: var(--spectrum-accent-color-1300);

    > li {
      /* inline-block may work, then can drop 4 rules below */
      display: inline;
      word-break: keep-all;
      overflow-wrap: break-word;
      white-space-collapse: collapse;
      text-wrap-style: balance;

      > a {
        &:link, &:visited {
          color: var(--spectrum-accent-color-1300);
          text-decoration: none;
        }
        &:hover {
          text-decoration: underline;
        }
      }
      &:first-child {
        font-weight: bold;
      }
      &::after {
        margin: 0 0.5em;
        content: "⏵"
      }
    }
  }
}

/* Override for ListView in navigation, by default it’s too bright(?). */
.navListView {
  background: var(--spectrum-alias-background-color-default);
  background-image: linear-gradient(
    100deg,
    var(--spectrum-alias-background-color-default) 20%,
    var(--spectrum-alias-pasteboard-background-color) 180%);
  border: none;
  border-radius: 0;

  .navListViewItemWithLink {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    & > a {
      &:link, &:hover, &:visited {
        text-decoration: none;
        color: inherit;
      }
    }
  }
}

.browserBar {
  position: fixed;
  left: 0;
  bottom: 0;
  top: 0;
  width: 58px;

  display: flex;
  flex-flow: column nowrap;

  /* loading janks things up for now. transition: background-color .5s linear; */

  background-color: var(--spectrum-alias-pasteboard-background-color);
  background-image: linear-gradient(
    91deg,
    var(--spectrum-alias-background-color-disabled) 10%,
    transparent 70%);

  color: var(--spectrum-alias-text-color);

  z-index: 22;

  &.browserBarExpanded {
    background-color: var(--spectrum-alias-background-color-default);
    background-image: linear-gradient(
      91deg,
      var(--spectrum-alias-background-color-disabled) 10%,
      transparent 70%);
  }

  .browserBarTitle {
    flex: 1;
    overflow: hidden;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;

    .browserBarTitleLink {
      &:link, &:visited {
        color: inherit;
        text-decoration: none;
      }
      &:hover {
        text-decoration: underline;
      }
    }

    h1 {
      /* By default we achieve vertical rendition of LTR TB scripts
       * by rotating the text, ensuring that typeface bottom
       * faces the main reading area. */

      /* TODO: This transform can maybe be simplified */
      transform: translateX(50%) rotate(-90deg) translateY(-25%) translateX(-100%) translateX(-20px);

      color: var(--spectrum-alias-border-color);
      font-size: 20px;
      line-height: 1;
      margin: 0;
      padding: 0;
      transform-origin: top left;

      width: 80vh; 
      height: 30px;

      overflow: hidden;
      text-align: right;
      text-overflow: ellipsis;

      /* For fonts with native vertical support, unset the fancy transforms
       * and just set writing-mode.
      html[lang="ja"] & {
        transform: unset;
        width: unset;
        height: unset;
        text-align: unset;
        writing-mode: vertical-rl;
        margin-top: 20px;
        abbr {
          text-orientation: upright;
          text-transform: full-width;
        }
      } */
    }
  }

  .browserBarToolbar[data-orientation=vertical] {
    flex-direction: column;
    display: flex;

    .browserBarToolbarGroup {
      display: flex;
      flex-flow: column nowrap;
      padding: 10px;
      gap: 5px;
    }
  }

  .progressWrapper {
    align-self: center;
    padding-top: 10px;
    padding-bottom: 10px;

    .progressIdle {
      transition: transform .5s ease-in-out;
      transform: scale(0.8);
      transform-origin: center;
    }
  }
}

.nav {
  width: 330px;
  position: fixed;
  left: 58px;
  top: 0;
  bottom: 0;

  box-sizing: border-box;

  z-index: 2;

  --spectrum-global-dimension-size-200: .5em;

  background-color: var(--spectrum-alias-background-color-default);
  color: var(--spectrum-alias-text-color);

  overflow-y: auto;

  > .navStickyHeader {
    padding: var(--spectrum-global-dimension-size-160);
    box-sizing: border-box;
  }

  /*
  .navContent {
    overflow: hidden;
  }
  */
}
